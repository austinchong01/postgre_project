<%
// Helper object to convert color names to hex codes
const colorMap = {
    'white': '#ffffff', 'black': '#000000', 'red': '#ff0000', 'blue': '#0000ff',
    'green': '#008000', 'yellow': '#ffff00', 'pink': '#ffc0cb', 'purple': '#800080',
    'orange': '#ffa500', 'gray': '#808080', 'grey': '#808080', 'brown': '#a52a2a',
    'navy': '#000080', 'dark blue': '#00008b', 'light blue': '#add8e6',
    'beige': '#f5f5dc', 'khaki': '#f0e68c', 'olive': '#808000'
};
%>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= item.name %> - Item Details</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 15px;
            text-align: center;
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }

        .subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .nav-links {
            margin-bottom: 2rem;
        }

        .nav-link {
            display: inline-block;
            background: white;
            color: #667eea;
            padding: 0.8rem 1.5rem;
            text-decoration: none;
            border-radius: 25px;
            margin-right: 1rem;
            font-weight: bold;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
        }

        .item-detail-card {
            background: white;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 8px 30px rgba(0,0,0,0.12);
        }

        .item-hero {
            background: linear-gradient(135deg, #f8f9ff 0%, #e8f2ff 100%);
            padding: 3rem;
            text-align: center;
            position: relative;
        }

        .item-image-placeholder {
            width: 200px;
            height: 200px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            margin: 0 auto 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 3rem;
            font-weight: bold;
        }

        .item-name {
            font-size: 2.5rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .item-type {
            display: inline-block;
            background: #667eea;
            color: white;
            padding: 0.5rem 1.5rem;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .item-price {
            font-size: 3rem;
            font-weight: bold;
            color: #27ae60;
            margin-bottom: 2rem;
        }

        .item-details {
            padding: 3rem;
        }

        .details-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .detail-section {
            background: #f8f9ff;
            padding: 2rem;
            border-radius: 15px;
            border-left: 5px solid #667eea;
        }

        .detail-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 1rem;
        }

        .detail-content {
            font-size: 1.1rem;
            color: #555;
        }

        .size-display {
            display: inline-block;
            background: #f39c12;
            color: white;
            padding: 1rem 2rem;
            border-radius: 15px;
            font-size: 1.5rem;
            font-weight: bold;
            margin-top: 0.5rem;
        }

        .color-display {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-top: 0.5rem;
        }

        .color-name {
            font-size: 1.2rem;
            font-weight: bold;
            color: #555;
        }

        .color-swatch-large {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: 4px solid #ddd;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .metadata-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            background: #f8f9ff;
            padding: 2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
        }

        .metadata-item {
            text-align: center;
        }

        .metadata-label {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .metadata-value {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
        }

        .related-items {
            background: #f8f9ff;
            padding: 2rem;
            border-radius: 15px;
        }

        .related-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 1.5rem;
        }

        .related-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
        }

        .related-item {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .related-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
        }

        .related-item-name {
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .related-item-price {
            color: #27ae60;
            font-weight: bold;
        }

        .related-item-details {
            font-size: 0.9rem;
            color: #666;
            margin-top: 0.5rem;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 1rem 2rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: bold;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-secondary {
            background: white;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .btn-danger {
            background: #e74c3c;
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .item-id {
            position: absolute;
            top: 1rem;
            right: 2rem;
            background: rgba(255,255,255,0.2);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 15px;
            font-size: 0.9rem;
            backdrop-filter: blur(10px);
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
            
            h1, .item-name {
                font-size: 2rem;
            }

            .item-price {
                font-size: 2rem;
            }
            
            .details-grid {
                grid-template-columns: 1fr;
            }

            .metadata-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .action-buttons {
                flex-direction: column;
            }

            .item-hero {
                padding: 2rem 1rem;
            }

            .item-details {
                padding: 2rem 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Item Details</h1>
            <p class="subtitle">Complete information about this item</p>
        </header>

        <div class="nav-links">
            <a href="/" class="nav-link">‚Üê All Items</a>
            <a href="/categories" class="nav-link">Categories</a>
            <a href="/category/<%= encodeURIComponent(item.type) %>" class="nav-link"><%= item.type %> Items</a>
        </div>

        <div class="item-detail-card">
            <div class="item-hero">
                <div class="item-id">ID: #<%= item.id %></div>
                <div class="item-image-placeholder"><%= item.name.charAt(0).toUpperCase() %></div>
                <div class="item-name"><%= item.name %></div>
                <div class="item-type"><%= item.type %></div>
                <div class="item-price">$<%= parseFloat(item.price).toFixed(2) %></div>
            </div>

            <div class="item-details">
                <div class="details-grid">
                    <div class="detail-section">
                        <div class="detail-title">Size Information</div>
                        <div class="detail-content">
                            This item is available in size:
                            <div class="size-display"><%= item.size %></div>
                        </div>
                    </div>

                    <div class="detail-section">
                        <div class="detail-title">Color Details</div>
                        <div class="detail-content">
                            Color of this item:
                            <div class="color-display">
                                <span class="color-name"><%= item.color %></span>
                                <div class="color-swatch-large" style="background-color: <%= colorMap[item.color.toLowerCase()] || '#cccccc' %>;"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="metadata-grid">
                    <div class="metadata-item">
                        <div class="metadata-label">Item ID</div>
                        <div class="metadata-value">#<%= item.id %></div>
                    </div>
                    <div class="metadata-item">
                        <div class="metadata-label">Category</div>
                        <div class="metadata-value"><%= item.type %></div>
                    </div>
                    <div class="metadata-item">
                        <div class="metadata-label">Price</div>
                        <div class="metadata-value">$<%= parseFloat(item.price).toFixed(2) %></div>
                    </div>
                    <% if (item.created_at) { %>
                    <div class="metadata-item">
                        <div class="metadata-label">Date Added</div>
                        <div class="metadata-value"><%= new Date(item.created_at).toLocaleDateString() %></div>
                    </div>
                    <% } %>
                </div>

                <% if (relatedItems && relatedItems.length > 0) { %>
                <div class="related-items">
                    <div class="related-title">Similar <%= item.type %> Items</div>
                    <div class="related-grid">
                        <% relatedItems.forEach(relatedItem => { %>
                            <div class="related-item" onclick="window.location.href='/item/<%= relatedItem.id %>'">
                                <div class="related-item-name"><%= relatedItem.name %></div>
                                <div class="related-item-price">$<%= parseFloat(relatedItem.price).toFixed(2) %></div>
                                <div class="related-item-details">
                                    <%= relatedItem.size %> ‚Ä¢ <%= relatedItem.color %>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
                <% } %>

                <div class="action-buttons">
                    <a href="/item/<%= item.id %>/edit" class="btn btn-primary">Edit Item</a>
                    <a href="/category/<%= encodeURIComponent(item.type) %>" class="btn btn-secondary">View Similar Items</a>
                    <button class="btn btn-danger" onclick="confirmDelete(<%= item.id %>)">Delete Item</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function confirmDelete(itemId) {
            if (confirm('Are you sure you want to delete this item? This action cannot be undone.')) {
                // Create a form and submit it for deletion
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/item/${itemId}/delete`;
                
                // Add CSRF token if needed
                const csrfInput = document.createElement('input');
                csrfInput.type = 'hidden';
                csrfInput.name = '_method';
                csrfInput.value = 'DELETE';
                form.appendChild(csrfInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Add click effects to related items
        document.addEventListener('DOMContentLoaded', function() {
            const relatedItems = document.querySelectorAll('.related-item');
            relatedItems.forEach(item => {
                item.addEventListener('click', function() {
                    this.style.transform = 'scale(1.05) translateY(-3px)';
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                });
            });
        });
    </script>
</body>
</html>